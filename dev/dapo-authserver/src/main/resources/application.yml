# EMBEDDED SERVER CONFIGURATION
server:
  port: ${PORT:8082}
  use-forward-headers: true
  error.whitelabel.enabled: false
  compression:
    enabled: true
    min-response-size: 1024
    mime-types:
      - text/html
      - text/css
      - text/plain
      - text/xml
      - application/json
      - application/javascript
  servlet:
    context-path: /

# PROFILES
spring:
  application.name: dapo-authserver
  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: update
      use-new-id-generator-mappings: true
    properties.hibernate.temp.use_jdbc_metadata_defaults: false
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
  datasource:
    platform: postgres
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/dapo
    username: dapo
    password: dapo
    driverClassName: org.postgresql.Driver
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
            clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 516070698796485
            clientSecret: 2a0b4582efdd50892421764f1e3b372e
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

# LOGGING
logging:
  level:
    org:
      springframework:
        security: DEBUG
        jdbc:
          core:
            JdbcTemplate: DEBUG

aossia:
  rad:
    passwordRecovery:
      confirm:
        subject: password recovery confirmation
    registration:
      scopes: ${SCOPES}
      confirm:
        from: ${spring.application.name}@dapo.tech
        subject: registration confirmation

# EUREKA
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:aossia-rad-discovery}:8761/eureka/

---

spring:
  profiles: standalone

  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:dapo_users}?useUnicode=yes&characterEncoding=UTF-8
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:appspace-auth}
    password: ${RABBITMQ_PASS:P@ssp0rt}

# EUREKA
eureka:
  instance:
      hostname: localhost
      port: 8761
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
